{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/simulator.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mDAAmD,kBAAkB,aAAa,kBAAkB,aAAa,kBAAkB,Q;;;;;;;;;;;ACAnI,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACAb;AACK;AAOvD;IAKE;;OAEG;IACH,sBAAoB,UAA4B;QAA5B,eAAU,GAAV,UAAU,CAAkB;QAPhD,UAAK,GAAG,iBAAiB,CAAC;QAC1B,mBAAc,GAAQ,CAAC,CAAC;QACxB,mBAAc,GAAQ,CAAC,CAAC;QACxB,mBAAc,GAAQ,CAAC,CAAC;IAI2B,CAAC;IACpD,+BAAQ,GAAR;QAAA,iBASC;QARC,MAAM,CAAC,gBAAgB,CAAC,cAAc,EAAE,eAAK;YAC3C,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAE/B,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;YACrD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;YACrD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,OAAO,CAAC;YACrD,KAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAlBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EASgC,mEAAgB;OARrC,YAAY,CAmBxB;IAAD,mBAAC;CAAA;AAnBwB;;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AACe;AAET;AAQ/C;IAAA;IAAwB,CAAC;IAAZ,SAAS;QANrB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE,CAAC,uEAAa,EAAE,qEAAgB,CAAC;YAC1C,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;ACZqB;AACO;AAKlD;IACE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IACxC,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAE/B,IAAI,CAAC,IAAI;aACN,GAAG,CAAC,gEAAgE,CAAC;aACrE,SAAS,CAAC,aAAG;YACZ,oBAAoB;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAVU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE0B,+DAAU;OADzB,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;ACN7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Angular Endpoint</h1>\\n<h1>{{ acceleration_x }}</h1>\\n<h1>{{ acceleration_y }}</h1>\\n<h1>{{ acceleration_z }}</h1>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { SimulatorService } from './simulator.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'angularEndpoint';\n  acceleration_x: any = 0;\n  acceleration_y: any = 0;\n  acceleration_z: any = 0;\n  /**\n   *\n   */\n  constructor(private _simulator: SimulatorService) {}\n  ngOnInit() {\n    window.addEventListener('devicemotion', event => {\n      console.log('event triggered');\n\n      this.acceleration_x = event.acceleration.x + ' m/s2';\n      this.acceleration_y = event.acceleration.y + ' m/s2';\n      this.acceleration_z = event.acceleration.z + ' m/s2';\n      this._simulator.sendData();\n    });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimulatorService {\n  constructor(private http: HttpClient) {}\n  sendData() {\n    console.log('calling service');\n\n    this.http\n      .get('https://devcloudcartup.xyz/node/dist/sendDataToTelemetryDevice')\n      .subscribe(res => {\n        // console.log(res);\n      });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}